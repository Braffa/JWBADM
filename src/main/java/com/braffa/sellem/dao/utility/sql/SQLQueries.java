package com.braffa.sellem.dao.utility.sql;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

public class SQLQueries {
	
	private Connection connection;

	public Connection hsqlConnection() {
		try {
			Class.forName("org.hsqldb.jdbc.JDBCDriver");
			Connection connection = DriverManager.getConnection("jdbc:hsqldb:"
					+ "sellMyThings", "braffa", "lindsay23");
			return connection;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	public Connection mysqlConnection() {
		//if (connection == null) {
			try {
				Class.forName("com.mysql.jdbc.Driver");

				connection = DriverManager
					.getConnection("jdbc:mysql://localhost/sellem?"
							+ "user=braffa&password=braffapw");
				connection.setAutoCommit(true);
			return connection;
			} catch (Exception e) {
			e.printStackTrace();
			}
		//}else {
			//return connection;
		//}
		return null;
	}

	public void dropTable(Connection connection, String table) {
		try {
			PreparedStatement ps = connection.prepareStatement(table);
			ps.executeUpdate();
			ps.close();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String hsqlLoginTable() {
		return "CREATE TABLE LOGIN ("
				+ " id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, "
				+ " userId VARCHAR(20), "
				+ " password VARCHAR(12), "
				+ " authorityLevel INTEGER, CRDATE TIMESTAMP, UPDDATE TIMESTAMP, PRIMARY KEY (userId) )";
	}

	public void hsqlCached(Connection connection, String table) {
		try {
			String cache = new String("SET TABLE " + table + " TYPE CACHED");
			PreparedStatement ps = connection.prepareStatement(cache);
			ps.executeUpdate();
			ps.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String createMysqlLoginTable() {
		return "CREATE TABLE LOGIN (userId VARCHAR(20), password VARCHAR(12), authorityLevel INTEGER, CRDATE TIMESTAMP, UPDDATE TIMESTAMP, PRIMARY KEY (userId))";
	}

	public String insertLogin1() {
		return "INSERT INTO LOGIN (userId, password, authorityLevel, CRDATE, UPDDATE) VALUES ('Braffa', 'amanda33', 99, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";
	}

	public String insertLogin2() {
		return "INSERT INTO LOGIN (userId, password, authorityLevel, CRDATE, UPDDATE) VALUES ('georgie', 'georgie', 01,  CURRENT_TIMESTAMP,  CURRENT_TIMESTAMP)";
	}

	public String insertLogin3() {
		return "INSERT INTO LOGIN (userId, password, authorityLevel, CRDATE, UPDDATE) VALUES ('admin', 'root', 99,  CURRENT_TIMESTAMP,  CURRENT_TIMESTAMP)";
	}

	public String insertLogin4() {
		return "INSERT INTO LOGIN (userId, password, authorityLevel, CRDATE, UPDDATE) VALUES ('999999', '999999', 99,  CURRENT_TIMESTAMP,  CURRENT_TIMESTAMP)";
	}
	
	public String loginCountSql ()  {
		return "SELECT USERID, PASSWORD, AUTHORITYLEVEL, CRDATE, UPDDATE FROM LOGIN ";
	}

	public String mysqlProductTable() {
		StringBuffer sql = new StringBuffer("CREATE TABLE PRODUCT ");
		sql.append("(author VARCHAR(50),         ");
		sql.append(" imageURL VARCHAR(255),      ");
		sql.append(" imageLargeURL VARCHAR(255), ");
		sql.append(" manufacturer VARCHAR(50),   ");
		sql.append(" productgroup VARCHAR(20),   ");
		sql.append(" productId VARCHAR(20),      ");
		sql.append(" productidtype VARCHAR(20),  ");
		sql.append(" source VARCHAR(20),         ");
		sql.append(" sourceid VARCHAR(20),       ");
		sql.append(" title VARCHAR(100),         ");
		sql.append(" crDate TIMESTAMP,           ");
		sql.append(" updDate TIMESTAMP,          ");
		sql.append(" PRIMARY KEY ( productId ))  ");
		return sql.toString();
	}

	public String hsqlCatalogTable() {
		StringBuffer sql = new StringBuffer("CREATE TABLE CATALOG ");
		sql.append(" (id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, ");
		sql.append(" author VARCHAR(50),         ");
		sql.append(" imageURL VARCHAR(255),      ");
		sql.append(" imageLargeURL VARCHAR(255), ");
		sql.append(" manufacturer VARCHAR(50),   ");
		sql.append(" productgroup VARCHAR(20),   ");
		sql.append(" productid VARCHAR(20),      ");
		sql.append(" productidtype VARCHAR(20),  ");
		sql.append(" source VARCHAR(20),         ");
		sql.append(" sourceid VARCHAR(20),       ");
		sql.append(" title VARCHAR(100),         ");
		sql.append(" CRDATE TIMESTAMP,           ");
		sql.append(" UPDDATE TIMESTAMP,          ");
		sql.append(" PRIMARY KEY ( productid ))  ");
		return sql.toString();
	}

	public String insertCaratlog1() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO CATALOG (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productid, productidtype, source, sourceid, title, CRDATE, UPDDATE) VALUES (");
		sql.append("'Sandercoe Justin', ");
		sql.append("'http://ecx.images-amazon.com/images/I/41hdqEVaWML._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'Music Sales', ");
		sql.append("'Book', ");
		sql.append("'9781849386685', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'1849386684', ");
		sql.append("'Justinguitar.Com Beginners Songbook J. Sandercoe (Easy Guitar With Notes and Tab)', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertCaratlog2() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO CATALOG (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productid, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'', ");
		sql.append("'http://ecx.images-amazon.com/images/I/511R3AC2C8L._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'Universal Pictures UK', ");
		sql.append("'DVD', ");
		sql.append("'5050582388237', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'B000BKTBVI', ");
		sql.append("'Green Street (Hooligans) [DVD]', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertCaratlog3() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO CATALOG (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productid, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Craig Sharkie', ");
		sql.append("'http://ecx.images-amazon.com/images/I/412Ddd%2Bq1ZL._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'SITEPOINT (ACADEMIC)', ");
		sql.append("'Book', ");
		sql.append("'978098056856', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'980576857', ");
		sql.append("'jQuery: Novice to Ninja', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertCaratlog4() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO CATALOG (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productid, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Subrahmanyam Allamaraju', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51YKR0ZVKRL._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'WROX Press Ltd', ");
		sql.append("'Book', ");
		sql.append("'9781861005618', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'186100561X', ");
		sql.append("'Professional Java Servlets 2.3 (Programmer to Programmer)', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertCaratlog5() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO CATALOG (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productid, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Mark Wutka', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51TW6S55A4L._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'QUE', ");
		sql.append("'Book', ");
		sql.append("'9780789724410', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'789724413', ");
		sql.append("'Using Java Server Pages and Servlets Special Edition (Special Edition Using)', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}
	
	public String insertProduct1() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE) VALUES (");
		sql.append("'Sandercoe Justin', ");
		sql.append("'http://ecx.images-amazon.com/images/I/41hdqEVaWML._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'Music Sales', ");
		sql.append("'Book', ");
		sql.append("'9781849386685', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'1849386684', ");
		sql.append("'Justinguitar.Com Beginners Songbook J. Sandercoe (Easy Guitar With Notes and Tab)', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertProduct2() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'', ");
		sql.append("'http://ecx.images-amazon.com/images/I/511R3AC2C8L._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'Universal Pictures UK', ");
		sql.append("'DVD', ");
		sql.append("'5050582388237', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'B000BKTBVI', ");
		sql.append("'Green Street (Hooligans) [DVD]', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertProduct3() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Craig Sharkie', ");
		sql.append("'http://ecx.images-amazon.com/images/I/412Ddd%2Bq1ZL._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'SITEPOINT (ACADEMIC)', ");
		sql.append("'Book', ");
		sql.append("'978098056856', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'980576857', ");
		sql.append("'jQuery: Novice to Ninja', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertProduct4() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Subrahmanyam Allamaraju', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51YKR0ZVKRL._SL75_.jpg', ");
		sql.append("'', ");
		sql.append("'WROX Press Ltd', ");
		sql.append("'Book', ");
		sql.append("'9781861005618', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'186100561X', ");
		sql.append("'Professional Java Servlets 2.3 (Programmer to Programmer)', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}

	public String insertProduct5() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Mark Wutka', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51TW6S55A4L._SL75_.jpg', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51YKR0ZVKRL._SL75_.jpg', ");
		sql.append("'QUE', ");
		sql.append("'Book', ");
		sql.append("'9780789724410', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'789724413', ");
		sql.append("'Using Java Server Pages and Servlets Special Edition (Special Edition Using)', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}
	
	public String insertProduct6() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO PRODUCT (author, imageURL, imageLargeURL, manufacturer, productgroup, "
						+ "productId, productidtype, source, sourceid, title, CRDATE, UPDDATE ) VALUES (");
		sql.append("'Willy wonka', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51TW6S55A4L._SL75_.jpg', ");
		sql.append("'http://ecx.images-amazon.com/images/I/51YKR0ZVKRL._SL75_.jpg', ");
		sql.append("'QUE', ");
		sql.append("'DVD', ");
		sql.append("'9780789799999', ");
		sql.append("'EAN', ");
		sql.append("'Amazon', ");
		sql.append("'789724999', ");
		sql.append("'The Choocolate FactoryY', ");
		sql.append("CURRENT_TIMESTAMP, CURRENT_TIMESTAMP");
		sql.append(")");
		return sql.toString();
	}	

	public String mysqlRegisteredUserTable() {
		StringBuffer sql = new StringBuffer("CREATE TABLE REGISTEREDUSER ");
		sql.append("(id INT NOT NULL AUTO_INCREMENT, userId  VARCHAR(20), ");
		sql.append(" email VARCHAR(50),     ");
		sql.append(" firstname VARCHAR(50), ");
		sql.append(" lastname VARCHAR(50),  ");
		sql.append(" telephone VARCHAR(50), ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))    ");
		return sql.toString();
	}

	public String hsqlRegisterTable() {
		StringBuffer sql = new StringBuffer("CREATE TABLE REGISTEREDUSER ");
		sql.append("(id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, ");
		sql.append(" userId  VARCHAR(20), ");
		sql.append(" email VARCHAR(50),     ");
		sql.append(" firstname VARCHAR(50), ");
		sql.append(" lastname VARCHAR(50),  ");
		sql.append(" telephone VARCHAR(50), ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))    ");
		return sql.toString();
	}

	public String insertRegisteredUser1() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO REGISTEREDUSER (userId, email, firstname, lastname, telephone, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'dave.rogers@yahoo.co.uk', ");
		sql.append("'Dave',   ");
		sql.append("'Rogers', ");
		sql.append("'01388 445566',    ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertRegisteredUser2() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO REGISTEREDUSER (userId, email, firstname, lastname, telephone, CRDATE, UPDDATE) VALUES (");
		sql.append("'georgie', ");
		sql.append("'george.smith@yahoo.co.uk', ");
		sql.append("'george', ");
		sql.append("'smith', ");
		sql.append("'01642 641834', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertRegisteredUser3() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO REGISTEREDUSER (userId, email, firstname, lastname, telephone, CRDATE, UPDDATE) VALUES (");
		sql.append("'admin', ");
		sql.append("'andrew.jones@yahoo.co.uk', ");
		sql.append("'andrew', ");
		sql.append("'jones', ");
		sql.append("'01642 356745', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertRegisteredUser4() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO REGISTEREDUSER (userId, email, firstname, lastname, telephone, CRDATE, UPDDATE) VALUES (");
		sql.append("'SUE123', ");
		sql.append("'susan.smurf@yahoo.co.uk', ");
		sql.append("'susan', ");
		sql.append("'smurf', ");
		sql.append("'01388 731258', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String mysqlUserToProductTable() throws Exception {
		StringBuffer sql = new StringBuffer("CREATE TABLE USERTOPRODUCT ");
		sql.append(" (id INT NOT NULL AUTO_INCREMENT, ");
		sql.append(" userId VARCHAR(20), " + " productId VARCHAR(20), ");
		sql.append(" productIndex INT, ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))");
		return sql.toString();
	}
	
	public String insertUserToProductTable1() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'georgie', ");
		sql.append("'9781861005618', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable2() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'georgie', ");
		sql.append("'9780789724410', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable3() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9780789724410', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable4() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9781861005618', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable5() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'978098056856', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable6() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'5050582388237', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToProductTable7() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9781849386685', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}
	
	public String insertUserToProductTable8() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'amanda33', ");
		sql.append("'9999999999000', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}	
	
	public String insertUserToProductTable9() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USERTOPRODUCT (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'grimbo', ");
		sql.append("'9999999999001', ");
		sql.append("0, ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}	

	public String hsqlUserToCatalogTable() throws Exception {
		StringBuffer sql = new StringBuffer("CREATE TABLE USER_TO_CATALOG ");
		sql.append(" (id INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) not null, ");
		sql.append(" userId VARCHAR(20), " + " productId VARCHAR(20), ");
		sql.append(" productIndex VARCHAR(20), ");
		sql.append(" CRDATE TIMESTAMP,      ");
		sql.append(" UPDDATE TIMESTAMP,     ");
		sql.append(" PRIMARY KEY ( id ))");
		return sql.toString();
	}

	public String insertUserToCatalogTable1() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'georgie', ");
		sql.append("'9781861005618', ");
		sql.append("'2', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable2() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'georgie', ");
		sql.append("'9780789724410', ");
		sql.append("'2', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable3() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9780789724410', ");
		sql.append("'1', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable4() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9781861005618', ");
		sql.append("'1', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable5() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'978098056856', ");
		sql.append("'1', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable6() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'5050582388237', ");
		sql.append("'1', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

	public String insertUserToCatalogTable7() {
		StringBuffer sql = new StringBuffer(
				"INSERT INTO USER_TO_CATALOG (userId, productId, productIndex, CRDATE, UPDDATE) VALUES (");
		sql.append("'Braffa', ");
		sql.append("'9781849386685', ");
		sql.append("'1', ");
		sql.append("CURRENT_TIMESTAMP, ");
		sql.append("CURRENT_TIMESTAMP ");
		sql.append(")");
		return sql.toString();
	}

}
